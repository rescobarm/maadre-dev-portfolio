@page "/"
@inject IDialogService DialogService;

<PageTitle>Inicio - [Rudyard]</PageTitle>

<FluentCard>
    <FluentHeader>
        <h3>¡Portafolio Digital!</h3>
    </FluentHeader>
    <FluentBodyContent>           
        <p>
            Hola, soy Rudyard, un desarrollador Full Stack especializado en tecnologías .NET.
            En este portafolio, encontrarás una muestra de mis proyectos, habilidades y experiencias.
        </p>

        <section>
            <h2>Sobre Mí</h2>
            <p>
                Apasionado por el desarrollo de software y las soluciones tecnológicas innovadoras,
                tengo [X años] de experiencia trabajando con tecnologías de vanguardia, incluyendo .NET, C#,
                y frameworks modernos para el desarrollo de aplicaciones web y móviles.
            </p>
        </section>

        <section>
            <h2>Mis Proyectos</h2>
            <p>
                Aquí encontrarás una selección de mis trabajos más destacados,
                que demuestran mi habilidad para desarrollar soluciones efectivas y eficientes.
            </p>
            <!-- Agregar aquí galería o lista de proyectos -->
        </section>

        <section>
            <h2>Habilidades Técnicas</h2>
            <p>
                A lo largo de mi carrera, he adquirido una amplia gama de habilidades técnicas, incluyendo:
            </p>
            <ul>
                <li>Desarrollo Back-End con C# y .NET</li>
                <li>Desarrollo Front-End con JavaScript, HTML5, CSS3</li>
                <li>Frameworks como Blazor y ASP.NET Core</li>
                <li>Base de datos SQL y NoSQL</li>
                <li>Prácticas de desarrollo ágil y DevOps</li>
            </ul>
        </section>

        <section>
            <h2>Contacto</h2>
            <!-- Agregar aquí formulario de contacto o detalles de contacto -->
            <FluentButton Appearance="Appearance.Accent"
                Loading="@Loading"
                IconStart="@(new Icons.Regular.Size20.MailInboxAdd())"
                Disabled="@(!AcceptToCreate)"
                          Type="ButtonType.Submit" OnClick="OnContact"></FluentButton>
        </section>
    </FluentBodyContent>
</FluentCard>

@code {
    private bool AcceptToCreate { get; set; } = true;
    private bool Loading { get; set; } = false;
    private async Task OnContact()
    {
        Loading = true;
        //await Task.Delay(1000);
        var parameters = new DialogParameters();
        // parameters.Add("Title", "Contacto");
        // parameters.Add("Message", "¿Deseas contactarme?");

        var dialog = await DialogService.ShowInfoAsync(message: "rudyard.matuz@gmail.com", title: "Contacto");
        //.Show<Dialog>("Contacto", parameters);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            var value = result.Data as string;
            if (value == "Yes")
            {
                //await DialogService.ShowInfoAsync(message: "¡Gracias por contactarme!", "Contacto");
                //("¡Gracias por contactarme!", "Contacto");
            }
        }
        Loading = false;
    }
}
